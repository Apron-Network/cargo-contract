[workspace]
members = [".", "metadata"]

[package]
name = "cargo-contract"
version = "0.14.0"
authors = ["Parity Technologies <admin@parity.io>"]
build = "build.rs"
edition = "2018"

license = "GPL-3.0"
readme = "README.md"
repository = "https://github.com/paritytech/cargo-contract"
documentation = "https://substrate.dev/substrate-contracts-workshop/#/"
homepage = "https://www.parity.io/"
description = "Setup and deployment tool for developing Wasm based smart contracts via ink!"
keywords = ["wasm", "parity", "webassembly", "blockchain", "edsl"]
categories = ["command-line-utilities", "development-tools::build-utils", "development-tools::cargo-plugins"]
include = ["Cargo.toml", "src/**/*.rs", "README.md", "LICENSE", "build.rs", "templates"]

[dependencies]
env_logger = "0.9.0"
anyhow = "1.0.43"
structopt = "0.3.23"
log = "0.4.14"
heck = "0.3.3"
zip = { version = "0.5.13", default-features = false }
parity-wasm = "0.42.2"
cargo_metadata = "0.14.0"
codec = { package = "parity-scale-codec", version = "2.1", features = ["derive"] }
which = "4.2.2"
colored = "2.0.0"
toml = "0.5.8"
rustc_version = "0.4.0"
blake2 = "0.9.2"
contract-metadata = { version = "0.3.0", path = "./metadata" }
semver = { version = "1.0.4", features = ["serde"] }
serde = { version = "1.0.130", default-features = false, features = ["derive"] }
serde_json = "1.0.67"
tempfile = "3.2.0"
url = { version = "2.2.2", features = ["serde"] }
impl-serde = "0.3.1"
regex = "1.4"

# dependencies for extrinsics (deploying and calling a contract)
async-std = { version = "1.10.0" }
ink_metadata = { version = "3.0.0-rc4", default-features = false, features = ["derive"] }
scale-info = { version = "1.0", default-features = false, features = ["derive"] }
sp-core = { version = "2.0.1" }
subxt = { version = "0.14.0", package = "substrate-subxt" }
futures = { version = "0.3.17" }
hex = { version = "0.4.3" }
jsonrpsee = { version = "0.1.0" }
sp-rpc = { version = "2.0.0" }
nom = { version = "6.0.0" }
indexmap = { version = "1.6.0" }
thiserror = { version = "1.0.21" }
escape8259 = { version = "0.5.0" }
itertools = { version = "0.9.0" }
bat = { version = "0.16.0" }

# Should be removed once bitvecto-rs/bitvec#105 is resolved
funty = "=1.1.0"

[build-dependencies]
anyhow = "1.0.43"
zip = { version = "0.5.13", default-features = false }
walkdir = "2.3.2"
substrate-build-script-utils = "3.0.0"
platforms = "1.1"

[dev-dependencies]
assert_cmd = "1.0.1"
assert_matches = "1.5.0"
pretty_assertions = "0.7.2"
wabt = "0.10.0"
regex = "1.4.1"
predicates = "1.0.5"

ink_primitives = { version = "3.0.0-rc4", default-features = false }
ink_env = { version = "3.0.0-rc4", default-features = false }
ink_storage = { version = "3.0.0-rc4", default-features = false }
ink_lang = { version = "3.0.0-rc4", default-features = false }

[features]
default = []

# Enable this to execute long running tests, which usually are only run on the CI server
#
# Disabled by default
test-ci-only = []

# Enable this to execute tests which depend on a locally running contracts enabed chain
# e.g.https://github.com/paritytech/canvas-node
integration-tests = []

[patch.crates-io]
ink_primitives = { git = "https://github.com/paritytech/ink/", branch = "aj-upgrade-scale-info", package = "ink_primitives" }
ink_metadata = { git = "https://github.com/paritytech/ink/", branch = "aj-upgrade-scale-info", package = "ink_metadata" }
ink_env = { git = "https://github.com/paritytech/ink/", branch = "aj-upgrade-scale-info", package = "ink_env" }
ink_storage = { git = "https://github.com/paritytech/ink/", branch = "aj-upgrade-scale-info", package = "ink_storage" }
ink_lang = { git = "https://github.com/paritytech/ink/", branch = "aj-upgrade-scale-info", package = "ink_lang" }
